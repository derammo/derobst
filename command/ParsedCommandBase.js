import { __awaiter } from "tslib";
export class ParsedCommand {
    parse(text, commandNodeRef) {
        if (this.commandNode !== undefined) {
            throw new Error("must not reuse ParsedCommand object, since it carries state and is referenced by clients");
        }
        const match = text.match(this.regex);
        if (match === null) {
            return match;
        }
        // freeze to retain this node
        this.commandNode = commandNodeRef.node;
        return match;
    }
    handleUsed(_view) {
        return __awaiter(this, void 0, void 0, function* () {
            // no code
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFyc2VkQ29tbWFuZEJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJQYXJzZWRDb21tYW5kQmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBUUEsTUFBTSxPQUFnQixhQUFhO0lBTy9CLEtBQUssQ0FBQyxJQUFZLEVBQUUsY0FBNkI7UUFDN0MsSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLFNBQVMsRUFBRTtZQUNoQyxNQUFNLElBQUksS0FBSyxDQUFDLDBGQUEwRixDQUFDLENBQUE7U0FDOUc7UUFDRCxNQUFNLEtBQUssR0FBNEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUQsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ2hCLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBRUQsNkJBQTZCO1FBQzdCLElBQUksQ0FBQyxXQUFXLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQztRQUN2QyxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUUsVUFBVSxDQUFDLEtBQWlCOztZQUMzQixVQUFVO1FBQ2pCLENBQUM7S0FBQTtDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWRpdG9yVmlldyB9IGZyb20gJ0Bjb2RlbWlycm9yL3ZpZXcnO1xyXG5pbXBvcnQgeyBTeW50YXhOb2RlLCBTeW50YXhOb2RlUmVmIH0gZnJvbSAnQGxlemVyL2NvbW1vbi9kaXN0L3RyZWUnO1xyXG5cclxuaW1wb3J0IHsgTWluaW1hbFBsdWdpbiB9IGZyb20gJ2Rlcm9ic3QvaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IFZpZXdQbHVnaW5Db250ZXh0IH0gZnJvbSAnZGVyb2JzdC92aWV3JztcclxuXHJcbmltcG9ydCB7IE1pbmltYWxDb21tYW5kIH0gZnJvbSAnLi9Db21tYW5kRGlzcGF0Y2hlcic7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUGFyc2VkQ29tbWFuZDxUSG9zdFBsdWdpbiBleHRlbmRzIE1pbmltYWxQbHVnaW4+IGltcGxlbWVudHMgTWluaW1hbENvbW1hbmQ8VEhvc3RQbHVnaW4+IHtcclxuICAgIGFic3RyYWN0IGJ1aWxkV2lkZ2V0KGNvbnRleHQ6IFZpZXdQbHVnaW5Db250ZXh0PFRIb3N0UGx1Z2luPik6IHZvaWQ7XHJcbiAgICBhYnN0cmFjdCBnZXQgcmVnZXgoKTogUmVnRXhwO1xyXG5cclxuICAgIC8vIFdBUk5JTkc6IHRoaXMgaXMgb25seSBzdGFibGUgYXMgbG9uZyBhcyB0aGUgZG9jdW1lbnQgZG9lcyBub3QgY2hhbmdlLCBiZWNhdXNlIGl0IGNvbnRhaW5zIG9mZnNldHMgaW50byB0aGUgdGV4dFxyXG4gICAgY29tbWFuZE5vZGU6IFN5bnRheE5vZGU7XHJcblxyXG4gICAgcGFyc2UodGV4dDogc3RyaW5nLCBjb21tYW5kTm9kZVJlZjogU3ludGF4Tm9kZVJlZik6IFJlZ0V4cE1hdGNoQXJyYXkgfCBudWxsIHtcclxuICAgICAgICBpZiAodGhpcy5jb21tYW5kTm9kZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIm11c3Qgbm90IHJldXNlIFBhcnNlZENvbW1hbmQgb2JqZWN0LCBzaW5jZSBpdCBjYXJyaWVzIHN0YXRlIGFuZCBpcyByZWZlcmVuY2VkIGJ5IGNsaWVudHNcIilcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgbWF0Y2g6IFJlZ0V4cE1hdGNoQXJyYXkgfCBudWxsID0gdGV4dC5tYXRjaCh0aGlzLnJlZ2V4KTtcclxuICAgICAgICBpZiAobWF0Y2ggPT09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gZnJlZXplIHRvIHJldGFpbiB0aGlzIG5vZGVcclxuICAgICAgICB0aGlzLmNvbW1hbmROb2RlID0gY29tbWFuZE5vZGVSZWYubm9kZTsgXHJcbiAgICAgICAgcmV0dXJuIG1hdGNoO1xyXG4gICAgfVxyXG5cclxuXHRhc3luYyBoYW5kbGVVc2VkKF92aWV3OiBFZGl0b3JWaWV3KSB7XHJcbiAgICAgICAgLy8gbm8gY29kZVxyXG5cdH1cclxufVxyXG5cclxuIl19